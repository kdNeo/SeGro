package GUI;

import Database.DB;
import Utility.Helper;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Intel
 */
public class LocationItems extends javax.swing.JPanel {

    /**
     * Creates new form location1
     */
    public LocationItems() {
        initComponents();
        clearFields();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        tf_name = new javax.swing.JTextField();
        tf_max = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cb_types = new javax.swing.JComboBox();
        tf_code = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tf_id = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tf_des = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tf_price = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(662, 547));
        setMinimumSize(new java.awt.Dimension(662, 547));
        setPreferredSize(new java.awt.Dimension(662, 547));

        jPanel1.setBackground(new java.awt.Color(55, 63, 75));
        jPanel1.setMaximumSize(new java.awt.Dimension(579, 484));
        jPanel1.setMinimumSize(new java.awt.Dimension(579, 484));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LOCAION", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(tf_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 59, 177, -1));

        tf_max.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_maxKeyTyped(evt);
            }
        });
        jPanel2.add(tf_max, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 50, -1));

        jLabel7.setText("Max");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, -1, -1));

        jLabel3.setText("ID");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, -1));

        jPanel2.add(cb_types, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 120, 170, -1));

        tf_code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_codeKeyTyped(evt);
            }
        });
        jPanel2.add(tf_code, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 90, 170, -1));

        jLabel5.setText(" Type");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        tf_id.setEditable(false);
        jPanel2.add(tf_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 27, 177, -1));

        jLabel10.setText("Code");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        jLabel4.setText("Name");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, -1));

        tf_des.setColumns(20);
        tf_des.setRows(5);
        jScrollPane1.setViewportView(tf_des);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 180, 202, 55));

        jLabel8.setText("Description");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jLabel1.setText("Price");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, -1, -1));

        tf_price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_priceKeyTyped(evt);
            }
        });
        jPanel2.add(tf_price, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, 177, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 353, 285));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Code", "Type", "Block", "Max", "price", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 302, 642, 234));

        jButton3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 11, 111, -1));

        jButton4.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton4.setText("UPDATE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 49, 111, -1));

        jButton5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton5.setText("DEACTIVATE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 94, -1, -1));

        jButton8.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton8.setText("ACTIVATE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 139, 113, -1));

        jButton10.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton10.setText("All locations");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 269, 218, -1));

        jButton11.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton11.setText("Active locations");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 202, 218, -1));

        jButton12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton12.setText("Inactive locations");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 236, 218, -1));

        jButton9.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jButton9.setText("Clear");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 137, 113, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String name = tf_name.getText();
        if (name.isEmpty()) {
            tf_name.grabFocus();
            return;
        }
        String code = tf_code.getText();
        if (code.isEmpty()) {
            tf_code.grabFocus();
            return;
        }

        if (Helper.doesCodeExists(code)) {
            JOptionPane.showMessageDialog(this, "This code already exists!", null, JOptionPane.PLAIN_MESSAGE);
            tf_code.grabFocus();
            tf_code.selectAll();
            return;
        }

        String max = tf_max.getText();
        if (max.isEmpty()) {
            tf_max.grabFocus();
            return;
        }
        String price = tf_price.getText();
        if (price.isEmpty()) {
            tf_price.grabFocus();
            return;
        }
        String type = cb_types.getSelectedItem().toString();
        String des = tf_des.getText();
        try {
            if (DB.iud("INSERT into location (name,price,description,max,location_type_type,status,code)Values('"
                    + name + "','" + price + "','" + des + "','" + max + "','" + type + "','" + 1 + "','" + code + "')")) {
                JOptionPane.showMessageDialog(this, "Addes successfully!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Couldn't add!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            DB.processException(e);
        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        int row = jTable1.getSelectedRow();
        try (
                ResultSet rs = DB.search("select * from location where idlocation='" + jTable1.getValueAt(row, 0) + "' limit 1");) {

            if (rs.next()) {
                tf_code.setText(rs.getString("code"));
                tf_des.setText(rs.getString("description"));
                tf_id.setText(rs.getString("idlocation"));
                tf_max.setText(rs.getString("max"));
                tf_name.setText(rs.getString("name"));
                tf_price.setText(rs.getString("price"));
                cb_types.setSelectedItem(rs.getString("location_type_type"));
                this.id = tf_id.getText();
                this.code = tf_code.getText();
            } else {
                JOptionPane.showMessageDialog(this, "No one Activated");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked
    private String id;
    private String code;

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (this.id == null) {
            JOptionPane.showMessageDialog(this, "Please select a location first!", "No locatin selected.", JOptionPane.QUESTION_MESSAGE);
            return;
        }
        if (!this.code.equals(tf_code.getText())) {
            if (Helper.doesCodeExists(tf_code.getText())) {
                JOptionPane.showMessageDialog(this, "This code already exists!", null, JOptionPane.PLAIN_MESSAGE);
                tf_code.grabFocus();
                tf_code.selectAll();
                return;
            }
        }
        String name = tf_name.getText();
        if (name.isEmpty()) {
            tf_name.grabFocus();
            return;
        }
        String code = tf_code.getText();
        if (code.isEmpty()) {
            tf_code.grabFocus();
            return;
        }
        String max = tf_max.getText();
        if (max.isEmpty()) {
            tf_max.grabFocus();
            return;
        }
        String price = tf_price.getText();
        if (price.isEmpty()) {
            tf_price.grabFocus();
            return;
        }
        String type = cb_types.getSelectedItem().toString();
        String des = tf_des.getText();
        try {
            if (DB.iud("UPDATE location set name ='" + name + "',price ='" + price + "',description ='" + des + "',max ='" + max + "',location_type_type ='" + type + "', code ='" + code + "' WHERE idlocation ='" + this.id + "'")) {
                JOptionPane.showMessageDialog(this, "Updated successfully!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Couldn't update!", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            DB.processException(e);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (this.id == null) {
            JOptionPane.showMessageDialog(this, "Please select a location first!", "No locatin selected.", JOptionPane.QUESTION_MESSAGE);
            return;
        }
        try {

            if (DB.iud("update location set status='0' where idlocation='" + this.id + "'")) {
                JOptionPane.showMessageDialog(this, "Updated Successfully!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Couldn't update !", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            DB.processException(e);
        }

    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (this.id == null) {
            JOptionPane.showMessageDialog(this, "Please select a location first!", "No locatin selected.", JOptionPane.QUESTION_MESSAGE);
            return;
        }
        try {

            if (DB.iud("update location set status='1' where idlocation='" + this.id + "'")) {
                JOptionPane.showMessageDialog(this, "Updated Successfully!", "Success!", JOptionPane.INFORMATION_MESSAGE);
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Couldn't update !", "Error!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            DB.processException(e);
        }

    }//GEN-LAST:event_jButton8ActionPerformed

    private void tf_priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_priceKeyTyped
        Helper.numericDataAdd(tf_price, evt);
    }//GEN-LAST:event_tf_priceKeyTyped

    private void tf_maxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_maxKeyTyped
        Helper.codeIdd(tf_max, evt, 3);
    }//GEN-LAST:event_tf_maxKeyTyped

    private void tf_codeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_codeKeyTyped
        Helper.codeIdd(tf_code, evt, 5);
    }//GEN-LAST:event_tf_codeKeyTyped

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        loadAll();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        loadActive(true);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        loadActive(false);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        clearFields();
    }//GEN-LAST:event_jButton9ActionPerformed

    public void clearFields() {
        loadActive(true);
        loadTypes();
        tf_code.setText(null);
        tf_des.setText(null);
        tf_id.setText(null);
        tf_max.setText(null);
        tf_name.setText(null);
        tf_price.setText(null);
        this.id = null;
        this.code = null;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cb_types;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tf_code;
    private javax.swing.JTextArea tf_des;
    private javax.swing.JTextField tf_id;
    private javax.swing.JTextField tf_max;
    private javax.swing.JTextField tf_name;
    private javax.swing.JTextField tf_price;
    // End of variables declaration//GEN-END:variables
    public void loadActive(boolean active) {
        String sql = null;
        if (active) {
            sql = "SELECT * from location where status ='" + 1 + "'";
        } else {
            sql = "SELECT * from location where status ='" + 0 + "'";
        }
        try (
                ResultSet rs = DB.search(sql);) {

            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("idlocation"));
                v.add(rs.getString("name"));
                v.add(rs.getString("code"));
                v.add(rs.getString("location_type_type"));
                v.add(rs.getString("block_idblock"));
                v.add(rs.getString("max"));
                v.add(rs.getString("price"));
                v.add(rs.getBoolean("status"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            DB.processException(e);
        }
    }

    public void loadAll() {
        try (
                ResultSet rs = DB.search("select * from location");) {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("idlocation"));
                v.add(rs.getString("name"));
                v.add(rs.getString("code"));
                v.add(rs.getString("location_type_type"));
                v.add(rs.getString("block_idblock"));
                v.add(rs.getString("max"));
                v.add(rs.getString("price"));
                v.add(rs.getBoolean("status"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            DB.processException(e);
        }
    }

    private void loadTypes() {
        try (
                ResultSet rs = DB.search("select * from location_type");) {
            DefaultComboBoxModel dcm = new DefaultComboBoxModel();
            while (rs.next()) {
                dcm.addElement(rs.getString("type"));
            }
            cb_types.setModel(dcm);
        } catch (Exception e) {
            DB.processException(e);
        }
    }
}
