package GUI;

import Database.DB;
import Database.beans.Location;
import Database.beans.MenuItem;
import Database.tables.BlockManager;
import Database.tables.LocationManager;
import Database.tables.MenuItemManager;
import Database.tables.MenuManager;
import Utility.Helper;
import java.awt.CardLayout;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sahan maduka
 */
public class ManageBlock extends javax.swing.JPanel {

    /**
     * Creates new form View_menu
     */
    public ManageBlock() {
        initComponents();
        loadAllBlocks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbox_block = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_locations = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_block_locations = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        setBackground(new java.awt.Color(55, 63, 75));
        setMaximumSize(new java.awt.Dimension(1366, 580));
        setMinimumSize(new java.awt.Dimension(1366, 580));
        setPreferredSize(new java.awt.Dimension(1366, 580));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cbox_block.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbox_blockItemStateChanged(evt);
            }
        });
        cbox_block.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbox_blockActionPerformed(evt);
            }
        });
        add(cbox_block, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 224, 33));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Locations");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, 130, -1));

        jButton1.setText("<< ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 150, 73, -1));

        jButton2.setText("REMOVE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 200, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("TOTAL");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 410, -1, -1));

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 440, 120, 30));

        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 320, 121, 43));

        jButton5.setText("Load");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1160, 50, 180, 30));

        jButton6.setText("Clear ");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 260, 110, -1));

        jButton4.setText("Calculate");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 120, 30));

        tbl_locations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Code", "Type", "Max", "price", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_locations.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_locationsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_locations);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 100, 590, 420));

        tbl_block_locations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Code", "Type", "Block", "Max", "price", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_block_locations.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_block_locationsMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbl_block_locations);

        add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 600, 400));

        jButton7.setText("<< Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1170, 540, 180, 30));

        jButton8.setText("Remove all locations");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 520, 140, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void cbox_blockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbox_blockActionPerformed
        // TODO add your handling code here:
        addItemsBySelectedName();
    }//GEN-LAST:event_cbox_blockActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tbl_locations.getSelectedRow();
        if (selectedRow == -1) {
            return;
        }
        DefaultTableModel t = (DefaultTableModel) tbl_block_locations.getModel();
        Location i = LocationManager.getRow(Integer.parseInt(tbl_locations.getValueAt(selectedRow, 0).toString()));
        if (i == null) {
            return;
        }

        if (doesIdExistInList(String.valueOf(i.getId()))) {
            JOptionPane.showMessageDialog(this, "This item already exists!");
            return;
        }

        Vector v = new Vector();
        v.add(i.getId());
        v.add(i.getName());
        v.add(i.getCode());
        v.add(i.getType());
        v.add(i.getBlock());
        v.add(i.getMax());
        v.add(i.getPrice().setScale(2).toString());
        v.add(i.isStatus());
        t.addRow(v);
        t = (DefaultTableModel) tbl_locations.getModel();
        t.removeRow(selectedRow);
    }//GEN-LAST:event_jButton1ActionPerformed

    private boolean doesIdExistInList(String id) {
        int rowCount = tbl_block_locations.getRowCount();
        for (int i = 0; i < rowCount; i++) {
            if (tbl_block_locations.getValueAt(i, 0).toString().equals(id)) {
                return true;
            }
        }
        return false;
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel) tbl_block_locations.getModel();
        int i = tbl_block_locations.getSelectedRow();
        if (i != -1) {
            dtm.removeRow(i);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    int sum = 0;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        loadAllItems();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void loadAllItems() {
        try (
                ResultSet rs = DB.search("select * from location where block_idblock is null");) {
            DefaultTableModel dtm = (DefaultTableModel) tbl_locations.getModel();
            dtm.setRowCount(0);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("idlocation"));
                v.add(rs.getString("name"));
                v.add(rs.getString("code"));
                v.add(rs.getString("location_type_type"));
                v.add(rs.getString("max"));
                v.add(rs.getString("price"));
                v.add(rs.getBoolean("status"));
                dtm.addRow(v);
            }
        } catch (Exception e) {
            DB.processException(e);
        }
    }
    private void cbox_blockItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbox_blockItemStateChanged
        // TODO add your handling code here:
        addItemsBySelectedName();
    }//GEN-LAST:event_cbox_blockItemStateChanged

    private void addItemsBySelectedName() {
        String name = cbox_block.getSelectedItem().toString();
        if (name.isEmpty()) {
            return;
        }
        String sql = "select * from block b inner join location l on b.idblock = l.block_idblock where b.blockname='" + name + "' ";

        DefaultTableModel dtm = (DefaultTableModel) tbl_block_locations.getModel();
        dtm.setRowCount(0);
        jTextField1.setText(null);
        try (
                ResultSet rs = DB.search(sql);) {
            if (rs == null) {
                return;
            }

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("idlocation"));
                v.add(rs.getString("name"));
                v.add(rs.getString("l.code"));
                v.add(rs.getString("location_type_type"));
                v.add(rs.getString("block_idblock"));
                v.add(rs.getString("max"));
                v.add(rs.getString("price"));
                v.add(rs.getBoolean("l.status"));
                dtm.addRow(v);
            }

        } catch (Exception e) {
            DB.processException(e);
        }
        try (
                ResultSet search = DB.search("select idblock,blockprice from block where blockname='" + name + "' limit 1")) {
            if (search.next()) {
                this.currentBlockId = search.getString("idblock");
                jTextField1.setText(search.getString("blockprice"));
            }

        } catch (Exception e) {
            DB.processException(e);
        }
    }

    String currentBlockId;

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (this.currentBlockId == null) {
            JOptionPane.showMessageDialog(this, "Please select a block first.", "No block selected!", JOptionPane.QUESTION_MESSAGE);
            return;
        }
        if (jTextField1.getText().trim().isEmpty()) {
            jTextField1.grabFocus();
            return;
        }
        if (tbl_block_locations.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Please select items of the menu.", "No item selected!", JOptionPane.QUESTION_MESSAGE);
        } else {
            updateLocations();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void updateLocations() {

        if (DB.iud("update location set block_idblock=null where block_idblock= '" + this.currentBlockId + "'")) {
            int icount = tbl_block_locations.getRowCount();
            boolean flag = true;
            String sql = "";
            for (int i = 0; i < icount; i++) {
                String lid = tbl_block_locations.getValueAt(i, 0).toString();
                sql = "update location set block_idblock = '" + this.currentBlockId + "' where idlocation='" + lid + "' limit 1";
                flag = DB.iud(sql);
                flag = DB.iud("update block set blockprice='" + jTextField1.getText() + "' where idblock='" + this.currentBlockId + "' limit 1");
            }
            if (flag) {
                JOptionPane.showMessageDialog(this, "Updated successfully.", "Success!", JOptionPane.INFORMATION_MESSAGE);
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Couldn't update.", "Error!", JOptionPane.ERROR_MESSAGE);
            }

        }

    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        clearFields();
    }//GEN-LAST:event_jButton6ActionPerformed

    public void clearFields() {
        ((DefaultTableModel) tbl_block_locations.getModel()).setRowCount(0);
        ((DefaultTableModel) tbl_locations.getModel()).setRowCount(0);
        jTextField1.setText(null);
        this.currentBlockId = null;
        cbox_block.setSelectedIndex(0);
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        int rowCount = tbl_block_locations.getRowCount();
        BigDecimal total = BigDecimal.ZERO;
        for (int i = 0; i < rowCount; i++) {
            total = total.add(new BigDecimal(tbl_block_locations.getValueAt(i, 6).toString()));
        }
        jTextField1.setText(total.setScale(2).toString());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        Helper.numericDataAdd(jTextField1, evt);
    }//GEN-LAST:event_jTextField1KeyTyped

    private void tbl_locationsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_locationsMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tbl_locationsMouseClicked

    private void tbl_block_locationsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_block_locationsMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tbl_block_locationsMouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        ((CardLayout) parent.registationpnl.getLayout()).show(parent.registationpnl, "L");
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        if (this.currentBlockId == null) {
            JOptionPane.showMessageDialog(this, "Please select a block first.", "No block selected!", JOptionPane.QUESTION_MESSAGE);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, "Remove all locations from this block?", "Confirm?", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (DB.iud("update location set block_idblock=null where block_idblock= '" + this.currentBlockId + "'")) {
                JOptionPane.showMessageDialog(this, "Removed successfully!", "Sussess!", JOptionPane.INFORMATION_MESSAGE);
                clearFields();
            }
        }
    }//GEN-LAST:event_jButton8ActionPerformed
    public Registation parent;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbox_block;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable tbl_block_locations;
    private javax.swing.JTable tbl_locations;
    // End of variables declaration//GEN-END:variables

    public void loadAllBlocks() {
        try {
            ResultSet rs = DB.search("SELECT * from block");
            DefaultComboBoxModel dcm = new DefaultComboBoxModel();
            dcm.addElement("");
            while (rs.next()) {
                String name = rs.getString("blockname");
                dcm.addElement(name);
            }
            cbox_block.setModel(dcm);
            cbox_block.setSelectedIndex(0);
        } catch (Exception e) {
            DB.processException(e);
        }
    }

}
