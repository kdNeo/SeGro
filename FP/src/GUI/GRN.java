package GUI;

import Database.DB;
import Utility.Helper;
import Utility.ReportManager;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.math.BigDecimal;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import static javax.swing.JFrame.setDefaultLookAndFeelDecorated;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import org.jvnet.substance.skin.SubstanceBusinessBlueSteelLookAndFeel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sahan maduka
 */
public class GRN extends javax.swing.JFrame {

    /**
     * Creates new form GRN
     */
    private static GRN g;

    public static synchronized GRN getInstance() {
        if (g == null) {
            g = new GRN();
        }
        return g;
    }

    /*
    implement logic for clearing all sub forms
     */
    public void clearFields() {
        if (sup != null) {
            sup.clearFields();
        }
        if (p1 != null) {
            p1.clearFields();
        }
        if (si != null) {
            si.clearFields(true);
        }
        if (ri != null) {
            ri.clearFields(true);
        }
        clearLocalFields(false);
    }
    Supplier sup;
    Product1 p1;
    Sell_Item si;
    Raw_Item ri;

    public GRN() {
        initComponents();
        //this.setExtendedState(MAXIMIZED_BOTH);
//        Product prod = new Product();
//        prod.parent = this;
//        card_all.add(prod, "P");

        sup = new Supplier();
        sup.parent = this;

        p1 = new Product1();

        si = new Sell_Item();
        si.parent = this;

        ri = new Raw_Item();
        ri.parent = this;
        card_all.add(sup, "S");

        card_all.add(p1, "P1");

        card_all.add(si, "SI");
        card_all.add(ri, "RI");

        combo();

        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent evt) {
                Frames.showMain();
            }
        });
        ActionListener updateClockAction = new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                jLabel3.setText(Helper.getDateTimeForDb(new Date()));

            }

        };
        Timer t = new Timer(1000, updateClockAction);

        t.start();
        tbl_grn.getModel().addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                calculateTotal();
            }
        });
    }

    public void clearLocalFields(boolean onlyTotal) {
        tf_amt.setText(null);
        tf_bal.setText(null);
        tf_dis.setText(null);

        if (onlyTotal) {
            return;
        }
        tf_net_total.setText(null);
        ((DefaultTableModel) tbl_grn.getModel()).setRowCount(0);
        combo();
    }

    public void calculateTotal() {
        int rowCount = tbl_grn.getRowCount();

        BigDecimal total = BigDecimal.ZERO;
        for (int i = 0; i < rowCount; i++) {
            total = total.add(new BigDecimal(tbl_grn.getValueAt(i, 10).toString()));
        }
        tf_net_total.setText(total.setScale(2).toString());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lb_user = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_grn = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        tf_net_total = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        tf_dis = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        tf_amt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tf_bal = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        cb_sup = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        card_all = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1366, 768));

        jPanel4.setBackground(new java.awt.Color(255, 204, 153));
        jPanel4.setForeground(new java.awt.Color(255, 255, 255));
        jPanel4.setMaximumSize(new java.awt.Dimension(1076, 152));
        jPanel4.setMinimumSize(new java.awt.Dimension(1076, 152));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel2.setText("GRN");

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel3.setText("1996/10/14");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setText("TIME");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setText("LOG USER");

        lb_user.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lb_user.setText("Name");

        jButton14.setText("HOME");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(29, 29, 29)
                        .addComponent(lb_user)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(841, 841, 841))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(lb_user))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(55, 63, 75));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(1366, 580));
        jPanel1.setMinimumSize(new java.awt.Dimension(1366, 580));
        jPanel1.setPreferredSize(new java.awt.Dimension(1366, 580));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton1.setText("New Supplier");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 191, 32));

        tbl_grn.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Name", "Stock", "Type", "Exp", "Qty", "Price", "Discount", "Margin", "Selling Price", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_grn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tbl_grnKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_grn);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 102, 630, 380));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Net Total");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, -1, -1));

        tf_net_total.setEditable(false);
        jPanel1.add(tf_net_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 503, 119, -1));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Discount");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 534, -1, -1));

        tf_dis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_disKeyTyped(evt);
            }
        });
        jPanel1.add(tf_dis, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 539, 119, -1));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Payment");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 503, -1, -1));

        tf_amt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tf_amtKeyTyped(evt);
            }
        });
        jPanel1.add(tf_amt, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 508, 119, -1));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Balance");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 534, -1, -1));

        tf_bal.setEditable(false);
        jPanel1.add(tf_bal, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 534, 119, -1));

        jButton3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton3.setText("FINISH");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 510, 92, 43));

        cb_sup.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb_supItemStateChanged(evt);
            }
        });
        cb_sup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_supActionPerformed(evt);
            }
        });
        jPanel1.add(cb_sup, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 52, 190, 32));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Supplier");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jButton2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton2.setText("New Product");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 191, 32));

        card_all.setBackground(new java.awt.Color(55, 63, 75));
        card_all.setMaximumSize(new java.awt.Dimension(422, 524));
        card_all.setMinimumSize(new java.awt.Dimension(422, 524));
        card_all.setName(""); // NOI18N
        card_all.setPreferredSize(new java.awt.Dimension(422, 524));
        card_all.setLayout(new java.awt.CardLayout());
        jPanel1.add(card_all, new org.netbeans.lib.awtextra.AbsoluteConstraints(646, 0, 720, 580));

        jButton5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton5.setText("Sell Item");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, 204, 32));

        jButton6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton6.setText("Raw Item");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 204, 32));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ((CardLayout) card_all.getLayout()).show(card_all, "S");
        sup.clearFields();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        Frames.showMain();
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        ((CardLayout) card_all.getLayout()).show(card_all, "P1");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cb_supActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_supActionPerformed

        ((CardLayout) card_all.getLayout()).show(card_all, "S");
        sup.loadSupplierDetails(cb_sup.getSelectedItem().toString());
    }//GEN-LAST:event_cb_supActionPerformed
    int sum = 0;
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        ((CardLayout) card_all.getLayout()).show(card_all, "SI");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        ((CardLayout) card_all.getLayout()).show(card_all, "RI");
    }//GEN-LAST:event_jButton6ActionPerformed

    private void cb_supItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb_supItemStateChanged
        ((CardLayout) card_all.getLayout()).show(card_all, "P");
        sup.loadSupplierDetails(cb_sup.getSelectedItem().toString());
    }//GEN-LAST:event_cb_supItemStateChanged

    private void tbl_grnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tbl_grnKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
            int selectedRow = tbl_grn.getSelectedRow();
            if (selectedRow != -1) {
                ((DefaultTableModel) tbl_grn.getModel()).removeRow(selectedRow);
            }
        }
    }//GEN-LAST:event_tbl_grnKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        makeGrn();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tf_disKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_disKeyTyped
        Helper.numericDataAdd(tf_dis, evt);
    }//GEN-LAST:event_tf_disKeyTyped

    private void tf_amtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_amtKeyTyped
        Helper.numericDataAdd(tf_amt, evt);
    }//GEN-LAST:event_tf_amtKeyTyped

    private void makeGrn() {
        int rowCount = tbl_grn.getRowCount();
        if (rowCount == 0) {
            return;
        }
        String payment = tf_amt.getText();
        if (payment.isEmpty()) {
            tf_amt.grabFocus();
            return;
        }
        String subTotal = tf_net_total.getText();
        String discount = tf_dis.getText();
        if (discount.isEmpty()) {
            discount = "0";
        }
        BigDecimal sub = new BigDecimal(subTotal);
        BigDecimal dis = new BigDecimal(discount);
        if (dis.compareTo(sub) == 1) {
            JOptionPane.showMessageDialog(this, "Discount is more than limit.", "Invalid payment!", JOptionPane.QUESTION_MESSAGE);
            tf_dis.grabFocus();
            tf_dis.selectAll();
            return;
        }
        BigDecimal amount = new BigDecimal(payment);
        BigDecimal total = sub.subtract(dis);
        if (total.compareTo(amount) == 1) {
            JOptionPane.showMessageDialog(this, "Amount is not enough.", "Insufficient payment!", JOptionPane.QUESTION_MESSAGE);
            tf_amt.grabFocus();
            tf_amt.selectAll();
            return;
        }
        tf_bal.setText(amount.subtract(total).setScale(2).toString());
        boolean flag = true;
        String sql = "start transaction";
        flag = DB.iud(sql);
        String supId = null;
        if (flag) {

            sql = "select idsupplier from supplier where name ='" + cb_sup.getSelectedItem().toString() + "' limit 1";
            try (
                    ResultSet search = DB.search(sql);) {
                if (search.next()) {
                    flag = true;
                    supId = search.getString("idsupplier");
                } else {
                    flag = false;
                }
            } catch (Exception e) {
                DB.processException(e);
            }
        }
        int newGrn = 0;
        if (flag) {
            sql = "insert into grn (subtotal,discount,date_time,supplier_idsupplier) values( "
                    + "'" + sub.setScale(2).toString() + "', '" + dis.setScale(2).toString() + "' ,'"
                    + Helper.getDateTimeForDb(new Date()) + "','" + supId + "' )";
            newGrn = DB.iudReturnId(sql);
            if (newGrn == -1) {
                flag = false;
            }
        }
        if (flag) {
            for (int i = 0; i < rowCount; i++) {
                if (!flag) {
                    break;
                }
                String type = tbl_grn.getValueAt(i, 3).toString();
                String code = tbl_grn.getValueAt(i, 0).toString();
                String exp = tbl_grn.getValueAt(i, 4).toString();
                String qty = tbl_grn.getValueAt(i, 5).toString();
                String price = tbl_grn.getValueAt(i, 6).toString();
                String di = tbl_grn.getValueAt(i, 7).toString();

                sql = "select idproduct from product where code ='" + code + "' ";
                try (
                        ResultSet search = DB.search(sql);) {
                    if (search.next()) {
                        code = search.getString("idproduct");
                    } else {
                        flag = false;
                        break;
                    }
                } catch (Exception e) {
                    DB.processException(e);
                }

                if (type.equals("sell")) {
                    String margin = tbl_grn.getValueAt(i, 8).toString();
                    String up = new BigDecimal(price).subtract(new BigDecimal(di)).add(new BigDecimal(margin)).setScale(2).toString();
                    sql = "insert into sell_item (product_idproduct,grn_idgrn,unitprice,qty,buyingprice,margin,discount,exp) values("
                            + "'" + code + "','" + newGrn + "','" + up + "','" + qty + "','" + price + "','" + margin + "','" + di + "','" + exp + "' )";
                } else {
                    sql = "insert into raw_item (product_idproduct,grn_idgrn,qty,buying_price,discount,exp) values("
                            + "'" + code + "','" + newGrn + "','" + qty + "','" + price + "','" + di + "','" + exp + "' )";
                }
                flag = DB.iud(sql);
            }
        }
        if (flag) {
            DB.iud("commit");
            JOptionPane.showMessageDialog(this, "Added successfully.", "Success!", JOptionPane.INFORMATION_MESSAGE);
            clearLocalFields(false);
            ReportManager.printLastGrn();
        } else {
            DB.iud("rollback");
            JOptionPane.showMessageDialog(this, "Couldn't add.", "Error!", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GRN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    setDefaultLookAndFeelDecorated(true);
                    UIManager.setLookAndFeel(new SubstanceBusinessBlueSteelLookAndFeel());
                } catch (Exception e) {
                    e.printStackTrace();
                }
                getInstance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel card_all;
    private javax.swing.JComboBox cb_sup;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lb_user;
    public javax.swing.JTable tbl_grn;
    private javax.swing.JTextField tf_amt;
    private javax.swing.JTextField tf_bal;
    private javax.swing.JTextField tf_dis;
    private javax.swing.JTextField tf_net_total;
    // End of variables declaration//GEN-END:variables
    /*
    public void addpanels(JPanel grn) {
        card_all.removeAll();
        card_all.add("GRN", grn);
        card_all.repaint();
        card_all.revalidate();

    }*/
 /*
    public void addpanels1(JPanel grn) {
        jPanel2.removeAll();
        jPanel2.add("GRN", grn);
        jPanel2.repaint();
        jPanel2.revalidate();

    }
     */
    public void combo() {
        try {
            ResultSet rs = DB.search("SELECT * from supplier");
            DefaultComboBoxModel dcm = new DefaultComboBoxModel();
            while (rs.next()) {
                String name = rs.getString("name");
                dcm.addElement(name);
            }
            cb_sup.setModel(dcm);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
